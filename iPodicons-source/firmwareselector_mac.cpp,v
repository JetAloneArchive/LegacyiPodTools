head	1.4;
access;
symbols
	ipodicons-0_3_6:1.4
	ipodicons-0_3_5:1.3
	ipodicons-0_3_4:1.3
	qt4_port:1.2.0.2
	ipodicons-0_3_3:1.1
	ipodicons-0_3_2:1.1
	ipodicons-0_3_1:1.1;
locks; strict;
comment	@// @;


1.4
date	2006.04.27.00.43.23;	author a1291762;	state Exp;
branches;
next	1.3;

1.3
date	2005.09.14.02.35.46;	author a1291762;	state Exp;
branches;
next	1.2;

1.2
date	2005.07.08.14.19.05;	author a1291762;	state Exp;
branches;
next	1.1;

1.1
date	2005.03.13.02.06.47;	author link;	state Exp;
branches;
next	;


desc
@@


1.4
log
@use the mountpoint name for iPods that don't have an iTunesDevice file (eg. 5G)
@
text
@/*
 * Copyright (C) 2004-2005  Lincoln Ramsay
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */
#include "firmwareselector.h"
#include "trace.h"
#include "ipodicons.h"
#include "combobox.h"

#include <qstring.h>
#include <qmemarray.h>
#include <qfileinfo.h>
#include <qregexp.h>
#include <qtimer.h>

#include <CoreServices/CoreServices.h>

#include <sys/stat.h>
#include <stdlib.h>


void FirmwareSelector::sysRefreshIpods()
{
    OSErr r;
    FSVolumeRefNum ref;
    HFSUniStr255 volName;
    FSRef root;
    for ( int vol = 1; ; vol++ ) {
	r = FSGetVolumeInfo( kFSInvalidVolumeRefNum, vol, &ref, kFSVolInfoNone, 0, &volName, &root );
	//qDebug( "return code %d", (int)r );
	if ( r == nsvErr )
	    break;

	OSStatus s;
	UInt8 path[255];
	s = FSRefMakePath( &root, path, 254 );
	Q_ASSERT( s == 0 );
	if ( s != 0 )
	    continue;
	QString mountPoint = QString::fromLocal8Bit( (const char *)path, qstrlen((const char *)path) );
	qDebug( "mountPoint %s", mountPoint.local8Bit().data() );

	int ret;
	struct stat sinfo;
	ret = stat( mountPoint.local8Bit().data(), &sinfo );
	QString device = QString( devname( sinfo.st_dev, S_IFBLK ) );
	qDebug( "device %s", device.local8Bit().data() );

        bool reg_device = QFileInfo(mountPoint + IPOD_DEVICE_FILE).exists();
        bool alt_device = QFileInfo(mountPoint + IPOD_ALT_DEVICE_FILE).exists();
	if ( !reg_device && !alt_device )
	    continue;
	QRegExp d( "^(.*disk\\d+)s\\d+" );
	if ( d.search(device) == -1 )
	    continue;
	QString firmwarePartition = QString("/dev/%1").arg(d.cap(1));
	qDebug( "firmwarePartition %s", firmwarePartition.local8Bit().data() );
	if ( !QFileInfo(firmwarePartition).exists() )
	    continue;

        QString label;
        if ( reg_device )
            label = IpodIcons::getInstance()->getText( mountPoint + IPOD_DEVICE_FILE );
        else
            label = QFileInfo(mountPoint).fileName();
        qDebug( "label %s", label.local8Bit().data() );

	ipodMap[label] = QStringList() << device << firmwarePartition;
	ipodCombo->insertItem( label );
	if ( ipodCombo->count() == 1 || label == previousIpod )
	    ipodCombo->setCurrentItem( ipodCombo->count() - 1 );
    }
}

@


1.3
log
@Throw away the Qt 4 work (the qt4_port branch can be used to continue it).
Trying to manually sync to pre-qt4 state (might not be there).
Build with Qt 3.3.5.
@
text
@d62 3
a64 1
	if ( !QFileInfo(mountPoint + IPOD_DEVICE_FILE).exists() )
d74 6
a79 2
	QString label = IpodIcons::getInstance()->getText( mountPoint + IPOD_DEVICE_FILE );
	qDebug( "label %s", label.local8Bit().data() );
@


1.2
log
@Quick Qt 4 port.
This just gets everything to compile.
I need to steal my "how to process Qt 4 libs" code to make the .app usable.
@
text
@d24 1
@


1.1
log
@ipodicons 0.3.1
@
text
@a23 1
#include <qmemarray.h>
@

