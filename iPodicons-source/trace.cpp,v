head	1.5;
access;
symbols
	ipodicons-0_3_6:1.5
	ipodicons-0_3_5:1.5
	ipodicons-0_3_4:1.5
	qt4_port:1.5.0.2
	ipodicons-0_3_3:1.5
	ipodicons-0_3_2:1.5
	ipodicons-0_3_1:1.5
	ipodicons-0_3_0:1.5
	ipodicons-0_2_4:1.4
	ipodicons-0_2_3:1.3
	ipodicons-0_2_2:1.3
	ipodicons-0_2_1:1.3
	ipodicons-0_2_0:1.2
	ipodicons-0_1_3:1.2
	ipodicons-0_1_2:1.1;
locks; strict;
comment	@// @;


1.5
date	2005.03.13.02.05.54;	author link;	state Exp;
branches;
next	1.4;

1.4
date	2005.03.13.02.03.39;	author link;	state Exp;
branches;
next	1.3;

1.3
date	2005.03.13.02.00.55;	author link;	state Exp;
branches;
next	1.2;

1.2
date	2005.03.13.01.58.57;	author link;	state Exp;
branches;
next	1.1;

1.1
date	2005.03.13.01.50.30;	author link;	state Exp;
branches;
next	;


desc
@@


1.5
log
@ipodicons 0.3.0
@
text
@/*
 * Copyright (C) 2004-2005  Lincoln Ramsay
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */
#include "trace.h"

#ifdef TRACE_ON

#include <fstream>

#include <stdlib.h>

static void indent();
void _traceMsgOutput( QtMsgType type, const char *msg );

static int _indent = 0;

_Trace::_Trace( const char *method )
{
    static bool msg_handler = FALSE;
    if ( !msg_handler ) {
        msg_handler = TRUE;
        qInstallMsgHandler( _traceMsgOutput );
    }

    if ( method ) {
	indent();
	cout << method << "() {" << endl;
    }
    _indent++;
}

_Trace::~_Trace()
{
    _indent--;
    indent();
    cout << "}" << endl;
}

void _traceMsgOutput( QtMsgType type, const char *msg )
{
    indent();
    cout << msg << endl;
    switch ( type ) {
        case QtFatalMsg:
            ::abort();                    // deliberately core dump
            break;
        default:
            break;
    }
}

static void indent()
{
    for ( int i = 0; i < _indent; i++ ) {
	cout << "    ";
    }
}

#endif // TRACE_ON

@


1.4
log
@ipodicons 0.2.4
@
text
@d41 1
a41 1
	cout << method << "()" << endl;
a42 2
    indent();
    cout << "{" << endl;
@


1.3
log
@ipodicons 0.2.1
@
text
@d2 1
a2 1
 * Copyright (C) 2004  Lincoln Ramsay
d39 4
a42 2
    indent();
    cout << method << "()" << endl;
@


1.2
log
@importing ipodicons 0.1.3
@
text
@d27 1
d59 1
a59 1
            abort();                    // deliberately core dump
@


1.1
log
@importing ipodicons 0.1.2
@
text
@d32 6
@

