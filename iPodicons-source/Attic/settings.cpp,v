head	1.6;
access;
symbols
	ipodicons-0_2_4:1.5
	ipodicons-0_2_3:1.4
	ipodicons-0_2_2:1.3
	ipodicons-0_2_1:1.3
	ipodicons-0_2_0:1.2
	ipodicons-0_1_3:1.1
	ipodicons-0_1_2:1.1;
locks; strict;
comment	@// @;


1.6
date	2005.03.13.02.05.54;	author link;	state dead;
branches;
next	1.5;

1.5
date	2005.03.13.02.03.39;	author link;	state Exp;
branches;
next	1.4;

1.4
date	2005.03.13.02.02.39;	author link;	state Exp;
branches;
next	1.3;

1.3
date	2005.03.13.02.00.55;	author link;	state Exp;
branches;
next	1.2;

1.2
date	2005.03.13.02.00.01;	author link;	state Exp;
branches;
next	1.1;

1.1
date	2005.03.13.01.50.30;	author link;	state Exp;
branches;
next	;


desc
@@


1.6
log
@ipodicons 0.3.0
@
text
@/*
 * Copyright (C) 2004-2005  Lincoln Ramsay
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */
#include "settings.h"
#include "trace.h"

#include <qapplication.h>
#include <qdir.h>

#include <stdlib.h>
#include <unistd.h>

#ifdef Q_WS_MACX
#include <CoreFoundation/CoreFoundation.h>
#endif


bool Settings::initialized = FALSE;
QString Settings::mPathPrefix;
QString Settings::mDataDir;

Settings::Settings()
    : QSettings()
{
    //TRACE("Settings::Settings()");
    if ( !Settings::initialized )
        Settings::initialize();

    insertSearchPath( QSettings::Unix, Settings::dataDir() );
    insertSearchPath( QSettings::Windows, "/iPodIcons" );
#ifdef Q_WS_MACX
    setPath( "ramsayl", "iPodIcons", User );
#endif
#if defined(Q_OS_UNIX) && !defined(Q_WS_MACX)
    beginGroup( "iPodIcons" );
#endif
}

Settings::~Settings()
{
    //TRACE("Settings::~Settings()");
}

void Settings::initialize()
{
    TRACE("Settings::initialize()");

    initialized = TRUE;
#ifdef Q_WS_MACX
    // CFBundle will give us the full pathname to the Application's bundle
    CFURLRef pluginRef = CFBundleCopyBundleURL(CFBundleGetMainBundle());
    CFStringRef macPath = CFURLCopyFileSystemPath(pluginRef, kCFURLPOSIXPathStyle);
    const char *pathPtr = CFStringGetCStringPtr(macPath, CFStringGetSystemEncoding());
    Q_ASSERT( pathPtr != NULL );
    mPathPrefix = pathPtr;
    mPathPrefix.append( "/Contents/Resources" );
#else
    mPathPrefix = qApp->applicationDirPath();
#endif

    // Setup the data dir
#ifdef Q_WS_MACX
    {
	// Clean out the "old" location
	mDataDir = QString("%1/.iPodIcons").arg(getenv("HOME"));
	QDir homeDir( mDataDir );
	if ( homeDir.exists() )
	    system(QString("rm -rf %1").arg(mDataDir).local8Bit().data());
    }

    mDataDir = QString("%1/Library/Application Support/iPodIcons").arg(getenv("HOME"));
#else
    mDataDir = QString("%1/.iPodIcons").arg(getenv("HOME"));
#endif

    QDir homeDir( mDataDir );
    bool ok;
    if ( !homeDir.exists() ) {
	qDebug( "mkdir %s", mDataDir.local8Bit().data() );
	ok = homeDir.mkdir( mDataDir );
	Q_ASSERT( ok );
    }
    qDebug( "cd %s", mDataDir.local8Bit().data() );
    ok = chdir( mDataDir.local8Bit() ) == 0;
    Q_ASSERT( ok );

}

QString Settings::dataDir()
{
    if ( !initialized )
        initialize();

    return mDataDir;
}

QString Settings::pathPrefix()
{
    if ( !initialized )
        initialize();

    return mPathPrefix;
}

void Settings::saveSession( const Session &session )
{
    TRACE("Settings::saveSession()");
    Settings settings;
    settings.writeEntry( "file", session.filename );
    settings.writeEntry( "glob", session.glob.join( ";;" ) );
    settings.writeEntry( "globIndex", session.globIndex );
    settings.writeEntry( "resourceIndex", session.resourceIndex );
}

void Settings::loadSession( Session &session )
{
    TRACE("Settings::loadSession()");
    Settings settings;
    session.filename = settings.readEntry( "file" );
    session.glob = QStringList::split( ";;", settings.readEntry( "glob" ) );
    session.globIndex = settings.readNumEntry( "globIndex" );
    session.resourceIndex = settings.readNumEntry( "resourceIndex" );
}

@


1.5
log
@ipodicons 0.2.4
@
text
@@


1.4
log
@ipodicons 0.2.3
@
text
@d2 1
a2 1
 * Copyright (C) 2004  Lincoln Ramsay
d39 1
a39 1
    //TRACE("Settings::Settings");
d55 1
a55 1
    //TRACE("Settings::~Settings");
d60 1
a60 1
    TRACE("Settings::initialize");
d76 14
a89 2
    mDataDir = getenv("HOME");
    mDataDir.append( "/.iPodIcons" );
d121 1
a121 1
    TRACE("Settings::saveSession");
a126 11
    settings.removeEntry( "firmware/items" );
    settings.beginGroup( "firmware/items" );
    for ( QMap<QString,IpodItem*>::const_iterator it = session.items.begin(); it != session.items.end(); it++ ) {
	IpodItem *ipod = *it;
	settings.beginGroup( ipod->address );
	//qDebug( "saving IpodItem %s", ipod->address.local8Bit().data() );
	settings.writeEntry( "type", (int)ipod->type );
	settings.writeEntry( "message", ipod->message );
	settings.endGroup();
    }
    settings.endGroup();
d131 1
a131 1
    TRACE("Settings::loadSession");
a136 17
    if ( !session.filename.isEmpty() ) {
	QStringList entries = settings.subkeyList( "firmware/items" );
	settings.beginGroup( "firmware/items" );
	for ( QStringList::iterator it = entries.begin(); it != entries.end(); it++ ) {
	    QString entry = *it;
	    //qDebug( "entry %s", entry.local8Bit().data() );
	    settings.beginGroup( entry );
	    IpodItem *ipod = new IpodItem;
	    ipod->address = entry;
	    ipod->type = (IpodItem::ItemType)settings.readNumEntry( "type" );
	    ipod->message = settings.readEntry( "message" );
	    //qDebug( "creating IpodItem %s", ipod->address.local8Bit().data() );
	    session.items.insert( ipod->address, ipod );
	    settings.endGroup();
	}
	settings.endGroup();
    }
@


1.3
log
@ipodicons 0.2.1
@
text
@d31 1
d49 1
a49 1
    beginGroup( "/iPodIcons" );
d81 1
a81 1
	qDebug( "mkdir %s", mDataDir.latin1() );
d85 1
a85 1
    qDebug( "cd %s", mDataDir.latin1() );
d109 1
d111 15
a125 3
    settings.writeEntry( "/file", session.file );
    settings.writeEntry( "/glob", session.glob.join( ";;" ) );
    settings.writeEntry( "/globIndex", session.globIndex );
d130 1
d132 21
a152 3
    session.file = settings.readEntry( "/file" );
    session.glob = QStringList::split( ";;", settings.readEntry( "/glob" ) );
    session.globIndex = settings.readNumEntry( "/globIndex" );
@


1.2
log
@ipodicons 0.2.0
@
text
@a79 1
#ifdef PROGRAM_DEBUG
a80 1
#endif
a83 1
#ifdef PROGRAM_DEBUG
a84 1
#endif
@


1.1
log
@importing ipodicons 0.1.2
@
text
@d44 4
a47 1
#ifndef Q_OS_WIN32
d108 16
@

